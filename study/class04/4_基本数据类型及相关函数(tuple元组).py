#Python 的元组与列表类似，不同之处在于元组的元素不能修改。
#这里的不能修改其本质是元组内的元素的内存地址指向不变，例如
tup1=(1,'5',[1,2])
tup1[2][0]=3
print(tup1)
# 输出结果 (1, '5', [3, 2]) 可以看到这里元组内的元素看似变更了，但其实，元组内的列表还是指向原有的内存地址，所以元组内的元素是不变的是指元素指向的内存地址
# 元组相对于列表因为数据无法修改，所以用元组更安全
# 元组使用小括号 ( )，列表使用方括号 [ ]。
# 元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。

#创建空元组
tup2=()
print(tup2)
#创建一个数据的元组
#元组中只包含一个元素时，需要在元素后面添加逗号 , ，否则括号会被当作运算符使用
tup22=('d',)
print(tup22)
#元组和列表、字符串一样都是可以通过下标索引获取元素的
tup3=(1,8,6,1,'7','hjy')
print(tup3[0],tup3[-1])
#也可以通过下标索引截取
print(tup3[1:3])
#同样的也可以切片
print(tup3[::2]);print(tup3[::-1])
#其实元组和列表十分相似，但是因为元组一旦初始化就不可变，所以没有append（） insert（）等方法
tup3=tup1+tup22
print(tup3)
#可以用del 删除初始化的元组
tup4=(1,)
del tup4
#print(tup4)

#元组的运算和列表也是一样的
tup5=tup1+tup2#拼接
tup6=tup5*2#重复
print(tup5);print(tup6)
print(1 in tup5)#判断元素是否存在
for x in tup5:#迭代
    tup7=(x,)
    print(tup7)